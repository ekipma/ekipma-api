// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.25.0
// source: proto/user.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UserRole int32

const (
	UserRole_UserRoleUnkown UserRole = 0
	UserRole_UserRoleNormal UserRole = 1
	UserRole_UserRoleOpr    UserRole = 2
	UserRole_UserRoleAdmin  UserRole = 3
)

// Enum value maps for UserRole.
var (
	UserRole_name = map[int32]string{
		0: "UserRoleUnkown",
		1: "UserRoleNormal",
		2: "UserRoleOpr",
		3: "UserRoleAdmin",
	}
	UserRole_value = map[string]int32{
		"UserRoleUnkown": 0,
		"UserRoleNormal": 1,
		"UserRoleOpr":    2,
		"UserRoleAdmin":  3,
	}
)

func (x UserRole) Enum() *UserRole {
	p := new(UserRole)
	*p = x
	return p
}

func (x UserRole) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserRole) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_user_proto_enumTypes[0].Descriptor()
}

func (UserRole) Type() protoreflect.EnumType {
	return &file_proto_user_proto_enumTypes[0]
}

func (x UserRole) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserRole.Descriptor instead.
func (UserRole) EnumDescriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{0}
}

type OtpOpr int32

const (
	OtpOpr_OtpNone           OtpOpr = 0
	OtpOpr_OtpRegister       OtpOpr = 1
	OtpOpr_OtpForgetPassword OtpOpr = 2
	OtpOpr_OtpChangeMobile   OtpOpr = 3
)

// Enum value maps for OtpOpr.
var (
	OtpOpr_name = map[int32]string{
		0: "OtpNone",
		1: "OtpRegister",
		2: "OtpForgetPassword",
		3: "OtpChangeMobile",
	}
	OtpOpr_value = map[string]int32{
		"OtpNone":           0,
		"OtpRegister":       1,
		"OtpForgetPassword": 2,
		"OtpChangeMobile":   3,
	}
)

func (x OtpOpr) Enum() *OtpOpr {
	p := new(OtpOpr)
	*p = x
	return p
}

func (x OtpOpr) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OtpOpr) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_user_proto_enumTypes[1].Descriptor()
}

func (OtpOpr) Type() protoreflect.EnumType {
	return &file_proto_user_proto_enumTypes[1]
}

func (x OtpOpr) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OtpOpr.Descriptor instead.
func (OtpOpr) EnumDescriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{1}
}

type WalletType int32

const (
	WalletType_CUSTOM WalletType = 0
	WalletType_XNO    WalletType = 1
	WalletType_TRX    WalletType = 2
	WalletType_DOGE   WalletType = 3
	WalletType_ADA    WalletType = 4
)

// Enum value maps for WalletType.
var (
	WalletType_name = map[int32]string{
		0: "CUSTOM",
		1: "XNO",
		2: "TRX",
		3: "DOGE",
		4: "ADA",
	}
	WalletType_value = map[string]int32{
		"CUSTOM": 0,
		"XNO":    1,
		"TRX":    2,
		"DOGE":   3,
		"ADA":    4,
	}
)

func (x WalletType) Enum() *WalletType {
	p := new(WalletType)
	*p = x
	return p
}

func (x WalletType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WalletType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_user_proto_enumTypes[2].Descriptor()
}

func (WalletType) Type() protoreflect.EnumType {
	return &file_proto_user_proto_enumTypes[2]
}

func (x WalletType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WalletType.Descriptor instead.
func (WalletType) EnumDescriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{2}
}

type UserPlanType int32

const (
	UserPlanType_UserPlanNormal  UserPlanType = 0
	UserPlanType_UserPlanPremium UserPlanType = 1
	UserPlanType_UserPlanGod     UserPlanType = 2
)

// Enum value maps for UserPlanType.
var (
	UserPlanType_name = map[int32]string{
		0: "UserPlanNormal",
		1: "UserPlanPremium",
		2: "UserPlanGod",
	}
	UserPlanType_value = map[string]int32{
		"UserPlanNormal":  0,
		"UserPlanPremium": 1,
		"UserPlanGod":     2,
	}
)

func (x UserPlanType) Enum() *UserPlanType {
	p := new(UserPlanType)
	*p = x
	return p
}

func (x UserPlanType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserPlanType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_user_proto_enumTypes[3].Descriptor()
}

func (UserPlanType) Type() protoreflect.EnumType {
	return &file_proto_user_proto_enumTypes[3]
}

func (x UserPlanType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserPlanType.Descriptor instead.
func (UserPlanType) EnumDescriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{3}
}

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// gorm
	Id        uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	// user
	Role     UserRole  `protobuf:"varint,4,opt,name=role,proto3,enum=ekipma.api.user.UserRole" json:"role,omitempty"`
	Mobile   string    `protobuf:"bytes,5,opt,name=mobile,proto3" json:"mobile,omitempty"`
	Code     string    `protobuf:"bytes,6,opt,name=code,proto3" json:"code,omitempty"`          // renewable - referral code
	Name     string    `protobuf:"bytes,7,opt,name=name,proto3" json:"name,omitempty"`          // editable
	Email    string    `protobuf:"bytes,8,opt,name=email,proto3" json:"email,omitempty"`        // editable
	CcNo     string    `protobuf:"bytes,9,opt,name=ccNo,proto3" json:"ccNo,omitempty"`          // editable - copiable credit-card no
	Public   bool      `protobuf:"varint,10,opt,name=public,proto3" json:"public,omitempty"`    // editable
	PhotoURL string    `protobuf:"bytes,11,opt,name=photoURL,proto3" json:"photoURL,omitempty"` // from uuid
	Inviter  uint64    `protobuf:"varint,12,opt,name=inviter,proto3" json:"inviter,omitempty"`
	Friends  []uint64  `protobuf:"varint,13,rep,packed,name=friends,proto3" json:"friends,omitempty"`
	Wallets  []uint64  `protobuf:"varint,14,rep,packed,name=wallets,proto3" json:"wallets,omitempty"`
	Plan     *UserPlan `protobuf:"bytes,15,opt,name=plan,proto3" json:"plan,omitempty"`
	// amount of the tokens (ma) that user holds
	Tokens uint64 `protobuf:"varint,16,opt,name=tokens,proto3" json:"tokens,omitempty"`
	// editable - user also likes to accept token as debt repay
	AcceptToken bool `protobuf:"varint,17,opt,name=acceptToken,proto3" json:"acceptToken,omitempty"`
	// achievements achieved by the user
	Achs []string `protobuf:"bytes,18,rep,name=achs,proto3" json:"achs,omitempty"`
	// hash of all assets holding
	Assets []string `protobuf:"bytes,19,rep,name=assets,proto3" json:"assets,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{0}
}

func (x *User) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *User) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *User) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *User) GetRole() UserRole {
	if x != nil {
		return x.Role
	}
	return UserRole_UserRoleUnkown
}

func (x *User) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *User) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *User) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *User) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *User) GetCcNo() string {
	if x != nil {
		return x.CcNo
	}
	return ""
}

func (x *User) GetPublic() bool {
	if x != nil {
		return x.Public
	}
	return false
}

func (x *User) GetPhotoURL() string {
	if x != nil {
		return x.PhotoURL
	}
	return ""
}

func (x *User) GetInviter() uint64 {
	if x != nil {
		return x.Inviter
	}
	return 0
}

func (x *User) GetFriends() []uint64 {
	if x != nil {
		return x.Friends
	}
	return nil
}

func (x *User) GetWallets() []uint64 {
	if x != nil {
		return x.Wallets
	}
	return nil
}

func (x *User) GetPlan() *UserPlan {
	if x != nil {
		return x.Plan
	}
	return nil
}

func (x *User) GetTokens() uint64 {
	if x != nil {
		return x.Tokens
	}
	return 0
}

func (x *User) GetAcceptToken() bool {
	if x != nil {
		return x.AcceptToken
	}
	return false
}

func (x *User) GetAchs() []string {
	if x != nil {
		return x.Achs
	}
	return nil
}

func (x *User) GetAssets() []string {
	if x != nil {
		return x.Assets
	}
	return nil
}

type SendOtpInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mobile string `protobuf:"bytes,1,opt,name=mobile,proto3" json:"mobile,omitempty"` // used for sms
	Opr    OtpOpr `protobuf:"varint,2,opt,name=opr,proto3,enum=ekipma.api.user.OtpOpr" json:"opr,omitempty"`
}

func (x *SendOtpInput) Reset() {
	*x = SendOtpInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendOtpInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendOtpInput) ProtoMessage() {}

func (x *SendOtpInput) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendOtpInput.ProtoReflect.Descriptor instead.
func (*SendOtpInput) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{1}
}

func (x *SendOtpInput) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *SendOtpInput) GetOpr() OtpOpr {
	if x != nil {
		return x.Opr
	}
	return OtpOpr_OtpNone
}

type VerifyOtpInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mobile string `protobuf:"bytes,1,opt,name=mobile,proto3" json:"mobile,omitempty"`
	Code   string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"` // validation
}

func (x *VerifyOtpInput) Reset() {
	*x = VerifyOtpInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyOtpInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyOtpInput) ProtoMessage() {}

func (x *VerifyOtpInput) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyOtpInput.ProtoReflect.Descriptor instead.
func (*VerifyOtpInput) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{2}
}

func (x *VerifyOtpInput) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *VerifyOtpInput) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type VerifyOtpOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OtpToken string `protobuf:"bytes,1,opt,name=otpToken,proto3" json:"otpToken,omitempty"` // salts mobile
}

func (x *VerifyOtpOutput) Reset() {
	*x = VerifyOtpOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyOtpOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyOtpOutput) ProtoMessage() {}

func (x *VerifyOtpOutput) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyOtpOutput.ProtoReflect.Descriptor instead.
func (*VerifyOtpOutput) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{3}
}

func (x *VerifyOtpOutput) GetOtpToken() string {
	if x != nil {
		return x.OtpToken
	}
	return ""
}

type RegisterInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OtpToken string `protobuf:"bytes,1,opt,name=otpToken,proto3" json:"otpToken,omitempty"` // has mobile
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	Name     string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Inviter  uint64 `protobuf:"varint,4,opt,name=inviter,proto3" json:"inviter,omitempty"`
	Email    string `protobuf:"bytes,5,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *RegisterInput) Reset() {
	*x = RegisterInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterInput) ProtoMessage() {}

func (x *RegisterInput) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterInput.ProtoReflect.Descriptor instead.
func (*RegisterInput) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{4}
}

func (x *RegisterInput) GetOtpToken() string {
	if x != nil {
		return x.OtpToken
	}
	return ""
}

func (x *RegisterInput) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *RegisterInput) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RegisterInput) GetInviter() uint64 {
	if x != nil {
		return x.Inviter
	}
	return 0
}

func (x *RegisterInput) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type LoginInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mobile   string `protobuf:"bytes,1,opt,name=mobile,proto3" json:"mobile,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *LoginInput) Reset() {
	*x = LoginInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginInput) ProtoMessage() {}

func (x *LoginInput) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginInput.ProtoReflect.Descriptor instead.
func (*LoginInput) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{5}
}

func (x *LoginInput) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *LoginInput) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type AuthOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	User  *User  `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *AuthOutput) Reset() {
	*x = AuthOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthOutput) ProtoMessage() {}

func (x *AuthOutput) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthOutput.ProtoReflect.Descriptor instead.
func (*AuthOutput) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{6}
}

func (x *AuthOutput) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *AuthOutput) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

type Friend struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       uint64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name     string    `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Email    string    `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	CcNo     string    `protobuf:"bytes,4,opt,name=ccNo,proto3" json:"ccNo,omitempty"`
	PhotoURL string    `protobuf:"bytes,5,opt,name=photoURL,proto3" json:"photoURL,omitempty"`
	Plan     *UserPlan `protobuf:"bytes,6,opt,name=plan,proto3" json:"plan,omitempty"`
}

func (x *Friend) Reset() {
	*x = Friend{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Friend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Friend) ProtoMessage() {}

func (x *Friend) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Friend.ProtoReflect.Descriptor instead.
func (*Friend) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{7}
}

func (x *Friend) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Friend) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Friend) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *Friend) GetCcNo() string {
	if x != nil {
		return x.CcNo
	}
	return ""
}

func (x *Friend) GetPhotoURL() string {
	if x != nil {
		return x.PhotoURL
	}
	return ""
}

func (x *Friend) GetPlan() *UserPlan {
	if x != nil {
		return x.Plan
	}
	return nil
}

type MobilesChunk struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info    *Chunk   `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	Mobiles []string `protobuf:"bytes,2,rep,name=mobiles,proto3" json:"mobiles,omitempty"` // 100 mobiles per chunk
}

func (x *MobilesChunk) Reset() {
	*x = MobilesChunk{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MobilesChunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MobilesChunk) ProtoMessage() {}

func (x *MobilesChunk) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MobilesChunk.ProtoReflect.Descriptor instead.
func (*MobilesChunk) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{8}
}

func (x *MobilesChunk) GetInfo() *Chunk {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *MobilesChunk) GetMobiles() []string {
	if x != nil {
		return x.Mobiles
	}
	return nil
}

type FriendsOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Friends []*Friend `protobuf:"bytes,1,rep,name=friends,proto3" json:"friends,omitempty"`
}

func (x *FriendsOutput) Reset() {
	*x = FriendsOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FriendsOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendsOutput) ProtoMessage() {}

func (x *FriendsOutput) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendsOutput.ProtoReflect.Descriptor instead.
func (*FriendsOutput) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{9}
}

func (x *FriendsOutput) GetFriends() []*Friend {
	if x != nil {
		return x.Friends
	}
	return nil
}

type Wallet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      uint64     `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`       // - output
	Owner   uint64     `protobuf:"varint,2,opt,name=owner,proto3" json:"owner,omitempty"` // - output
	Type    WalletType `protobuf:"varint,3,opt,name=type,proto3,enum=ekipma.api.user.WalletType" json:"type,omitempty"`
	Addr    string     `protobuf:"bytes,4,opt,name=addr,proto3" json:"addr,omitempty"`
	Public  bool       `protobuf:"varint,5,opt,name=public,proto3" json:"public,omitempty"`   // visible to other users
	Primary bool       `protobuf:"varint,6,opt,name=primary,proto3" json:"primary,omitempty"` // input - sets as primary
}

func (x *Wallet) Reset() {
	*x = Wallet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Wallet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Wallet) ProtoMessage() {}

func (x *Wallet) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Wallet.ProtoReflect.Descriptor instead.
func (*Wallet) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{10}
}

func (x *Wallet) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Wallet) GetOwner() uint64 {
	if x != nil {
		return x.Owner
	}
	return 0
}

func (x *Wallet) GetType() WalletType {
	if x != nil {
		return x.Type
	}
	return WalletType_CUSTOM
}

func (x *Wallet) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *Wallet) GetPublic() bool {
	if x != nil {
		return x.Public
	}
	return false
}

func (x *Wallet) GetPrimary() bool {
	if x != nil {
		return x.Primary
	}
	return false
}

type WalletsOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Wallets []*Wallet `protobuf:"bytes,1,rep,name=wallets,proto3" json:"wallets,omitempty"`
}

func (x *WalletsOutput) Reset() {
	*x = WalletsOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WalletsOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WalletsOutput) ProtoMessage() {}

func (x *WalletsOutput) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WalletsOutput.ProtoReflect.Descriptor instead.
func (*WalletsOutput) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{11}
}

func (x *WalletsOutput) GetWallets() []*Wallet {
	if x != nil {
		return x.Wallets
	}
	return nil
}

type RequestPurchaseInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WalledID uint64 `protobuf:"varint,1,opt,name=walledID,proto3" json:"walledID,omitempty"`
}

func (x *RequestPurchaseInput) Reset() {
	*x = RequestPurchaseInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestPurchaseInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestPurchaseInput) ProtoMessage() {}

func (x *RequestPurchaseInput) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestPurchaseInput.ProtoReflect.Descriptor instead.
func (*RequestPurchaseInput) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{12}
}

func (x *RequestPurchaseInput) GetWalledID() uint64 {
	if x != nil {
		return x.WalledID
	}
	return 0
}

type RequestPurchaseOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WDist       *Wallet `protobuf:"bytes,1,opt,name=wDist,proto3" json:"wDist,omitempty"`             // send my related wallet address
	PriceVsMA   float32 `protobuf:"fixed32,2,opt,name=PriceVsMA,proto3" json:"PriceVsMA,omitempty"`   // price of wType vs MA token
	NeedHash    bool    `protobuf:"varint,3,opt,name=needHash,proto3" json:"needHash,omitempty"`      // whether the method needs tx hash
	RedirectURL string  `protobuf:"bytes,4,opt,name=redirectURL,proto3" json:"redirectURL,omitempty"` // ignore other fields - open link in web
}

func (x *RequestPurchaseOutput) Reset() {
	*x = RequestPurchaseOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestPurchaseOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestPurchaseOutput) ProtoMessage() {}

func (x *RequestPurchaseOutput) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestPurchaseOutput.ProtoReflect.Descriptor instead.
func (*RequestPurchaseOutput) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{13}
}

func (x *RequestPurchaseOutput) GetWDist() *Wallet {
	if x != nil {
		return x.WDist
	}
	return nil
}

func (x *RequestPurchaseOutput) GetPriceVsMA() float32 {
	if x != nil {
		return x.PriceVsMA
	}
	return 0
}

func (x *RequestPurchaseOutput) GetNeedHash() bool {
	if x != nil {
		return x.NeedHash
	}
	return false
}

func (x *RequestPurchaseOutput) GetRedirectURL() string {
	if x != nil {
		return x.RedirectURL
	}
	return ""
}

type VerifyPurchaseInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type WalletType `protobuf:"varint,1,opt,name=type,proto3,enum=ekipma.api.user.WalletType" json:"type,omitempty"`
	Hash string     `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"` // only needed for few types
}

func (x *VerifyPurchaseInput) Reset() {
	*x = VerifyPurchaseInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyPurchaseInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyPurchaseInput) ProtoMessage() {}

func (x *VerifyPurchaseInput) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyPurchaseInput.ProtoReflect.Descriptor instead.
func (*VerifyPurchaseInput) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{14}
}

func (x *VerifyPurchaseInput) GetType() WalletType {
	if x != nil {
		return x.Type
	}
	return WalletType_CUSTOM
}

func (x *VerifyPurchaseInput) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

type UserPlan struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type      UserPlanType           `protobuf:"varint,1,opt,name=type,proto3,enum=ekipma.api.user.UserPlanType" json:"type,omitempty"`
	ExpiresAt *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=expiresAt,proto3" json:"expiresAt,omitempty"` // outpu
}

func (x *UserPlan) Reset() {
	*x = UserPlan{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserPlan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserPlan) ProtoMessage() {}

func (x *UserPlan) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserPlan.ProtoReflect.Descriptor instead.
func (*UserPlan) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{15}
}

func (x *UserPlan) GetType() UserPlanType {
	if x != nil {
		return x.Type
	}
	return UserPlanType_UserPlanNormal
}

func (x *UserPlan) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

type BuyAssetInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid  string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`    // unique id of the asset - convention
	Price uint64 `protobuf:"varint,2,opt,name=price,proto3" json:"price,omitempty"` // least 1 token (prevent brute forcing)
	Hash  string `protobuf:"bytes,3,opt,name=hash,proto3" json:"hash,omitempty"`    // input - checksum for type+uuid+price not to alter
}

func (x *BuyAssetInput) Reset() {
	*x = BuyAssetInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuyAssetInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuyAssetInput) ProtoMessage() {}

func (x *BuyAssetInput) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuyAssetInput.ProtoReflect.Descriptor instead.
func (*BuyAssetInput) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{16}
}

func (x *BuyAssetInput) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *BuyAssetInput) GetPrice() uint64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *BuyAssetInput) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

type SendTokenInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount uint64 `protobuf:"varint,1,opt,name=amount,proto3" json:"amount,omitempty"`
	To     uint64 `protobuf:"varint,2,opt,name=to,proto3" json:"to,omitempty"` // id of receiver
}

func (x *SendTokenInput) Reset() {
	*x = SendTokenInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendTokenInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendTokenInput) ProtoMessage() {}

func (x *SendTokenInput) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendTokenInput.ProtoReflect.Descriptor instead.
func (*SendTokenInput) Descriptor() ([]byte, []int) {
	return file_proto_user_proto_rawDescGZIP(), []int{17}
}

func (x *SendTokenInput) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *SendTokenInput) GetTo() uint64 {
	if x != nil {
		return x.To
	}
	return 0
}

var File_proto_user_proto protoreflect.FileDescriptor

var file_proto_user_proto_rawDesc = []byte{
	0x0a, 0x10, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0f, 0x65, 0x6b, 0x69, 0x70, 0x6d, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x1a, 0x12, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xba, 0x04, 0x0a, 0x04, 0x55, 0x73, 0x65,
	0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x2d, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x65, 0x6b, 0x69, 0x70, 0x6d, 0x61, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04,
	0x72, 0x6f, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x63,
	0x4e, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x63, 0x4e, 0x6f, 0x12, 0x16,
	0x0a, 0x06, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x55,
	0x52, 0x4c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x55,
	0x52, 0x4c, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x72, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x07, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07,
	0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x04, 0x52, 0x07, 0x66,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x04, 0x52, 0x07, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x73,
	0x12, 0x2d, 0x0a, 0x04, 0x70, 0x6c, 0x61, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x65, 0x6b, 0x69, 0x70, 0x6d, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x04, 0x70, 0x6c, 0x61, 0x6e, 0x12,
	0x16, 0x0a, 0x06, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x06, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x70,
	0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x11, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x61, 0x63,
	0x63, 0x65, 0x70, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x63, 0x68,
	0x73, 0x18, 0x12, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x61, 0x63, 0x68, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x18, 0x13, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x73, 0x22, 0x51, 0x0a, 0x0c, 0x53, 0x65, 0x6e, 0x64, 0x4f, 0x74, 0x70,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x29, 0x0a,
	0x03, 0x6f, 0x70, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x65, 0x6b, 0x69,
	0x70, 0x6d, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x4f, 0x74, 0x70,
	0x4f, 0x70, 0x72, 0x52, 0x03, 0x6f, 0x70, 0x72, 0x22, 0x3c, 0x0a, 0x0e, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x79, 0x4f, 0x74, 0x70, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f,
	0x62, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x62, 0x69,
	0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x2d, 0x0a, 0x0f, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79,
	0x4f, 0x74, 0x70, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x74, 0x70,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x74, 0x70,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x8b, 0x01, 0x0a, 0x0d, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x74, 0x70, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x74, 0x70, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x72, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x22, 0x40, 0x0a, 0x0a, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x4d, 0x0a, 0x0a, 0x41, 0x75, 0x74, 0x68, 0x4f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x29, 0x0a, 0x04, 0x75, 0x73, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65, 0x6b, 0x69, 0x70, 0x6d, 0x61,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04,
	0x75, 0x73, 0x65, 0x72, 0x22, 0xa1, 0x01, 0x0a, 0x06, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x63, 0x4e,
	0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x63, 0x4e, 0x6f, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x55, 0x52, 0x4c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x55, 0x52, 0x4c, 0x12, 0x2d, 0x0a, 0x04, 0x70, 0x6c, 0x61,
	0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x6b, 0x69, 0x70, 0x6d, 0x61,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x6c,
	0x61, 0x6e, 0x52, 0x04, 0x70, 0x6c, 0x61, 0x6e, 0x22, 0x56, 0x0a, 0x0c, 0x4d, 0x6f, 0x62, 0x69,
	0x6c, 0x65, 0x73, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x12, 0x2c, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65, 0x6b, 0x69, 0x70, 0x6d, 0x61, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x68, 0x75, 0x6e, 0x6b,
	0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x73,
	0x22, 0x42, 0x0a, 0x0d, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x12, 0x31, 0x0a, 0x07, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65, 0x6b, 0x69, 0x70, 0x6d, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x07, 0x66, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x73, 0x22, 0xa5, 0x01, 0x0a, 0x06, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x2f, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x65, 0x6b, 0x69, 0x70, 0x6d, 0x61, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x22, 0x42, 0x0a, 0x0d,
	0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x31, 0x0a,
	0x07, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x65, 0x6b, 0x69, 0x70, 0x6d, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x07, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x73,
	0x22, 0x32, 0x0a, 0x14, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x75, 0x72, 0x63, 0x68,
	0x61, 0x73, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x77, 0x61, 0x6c, 0x6c,
	0x65, 0x64, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x77, 0x61, 0x6c, 0x6c,
	0x65, 0x64, 0x49, 0x44, 0x22, 0xa2, 0x01, 0x0a, 0x15, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x2d,
	0x0a, 0x05, 0x77, 0x44, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x65, 0x6b, 0x69, 0x70, 0x6d, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x05, 0x77, 0x44, 0x69, 0x73, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x50, 0x72, 0x69, 0x63, 0x65, 0x56, 0x73, 0x4d, 0x41, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x09, 0x50, 0x72, 0x69, 0x63, 0x65, 0x56, 0x73, 0x4d, 0x41, 0x12, 0x1a, 0x0a, 0x08, 0x6e,
	0x65, 0x65, 0x64, 0x48, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x6e,
	0x65, 0x65, 0x64, 0x48, 0x61, 0x73, 0x68, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x55, 0x52, 0x4c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x52, 0x4c, 0x22, 0x5a, 0x0a, 0x13, 0x56, 0x65, 0x72,
	0x69, 0x66, 0x79, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x12, 0x2f, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b,
	0x2e, 0x65, 0x6b, 0x69, 0x70, 0x6d, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x68, 0x61, 0x73, 0x68, 0x22, 0x77, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x50, 0x6c, 0x61,
	0x6e, 0x12, 0x31, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1d, 0x2e, 0x65, 0x6b, 0x69, 0x70, 0x6d, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x41,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x41, 0x74, 0x22, 0x4d,
	0x0a, 0x0d, 0x42, 0x75, 0x79, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75,
	0x75, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73,
	0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x22, 0x38, 0x0a,
	0x0e, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x02, 0x74, 0x6f, 0x2a, 0x56, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x6f, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x0e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x55,
	0x6e, 0x6b, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x6f, 0x6c, 0x65, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x4f, 0x70, 0x72, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x10, 0x03, 0x2a,
	0x52, 0x0a, 0x06, 0x4f, 0x74, 0x70, 0x4f, 0x70, 0x72, 0x12, 0x0b, 0x0a, 0x07, 0x4f, 0x74, 0x70,
	0x4e, 0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x4f, 0x74, 0x70, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x4f, 0x74, 0x70, 0x46, 0x6f,
	0x72, 0x67, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x10, 0x02, 0x12, 0x13,
	0x0a, 0x0f, 0x4f, 0x74, 0x70, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4d, 0x6f, 0x62, 0x69, 0x6c,
	0x65, 0x10, 0x03, 0x2a, 0x3d, 0x0a, 0x0a, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x55, 0x53, 0x54, 0x4f, 0x4d, 0x10, 0x00, 0x12, 0x07, 0x0a,
	0x03, 0x58, 0x4e, 0x4f, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x54, 0x52, 0x58, 0x10, 0x02, 0x12,
	0x08, 0x0a, 0x04, 0x44, 0x4f, 0x47, 0x45, 0x10, 0x03, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x44, 0x41,
	0x10, 0x04, 0x2a, 0x48, 0x0a, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x12, 0x0a, 0x0e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x6e, 0x4e, 0x6f,
	0x72, 0x6d, 0x61, 0x6c, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x55, 0x73, 0x65, 0x72, 0x50, 0x6c,
	0x61, 0x6e, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x55,
	0x73, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x6e, 0x47, 0x6f, 0x64, 0x10, 0x02, 0x32, 0xc4, 0x08, 0x0a,
	0x0b, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x42, 0x0a, 0x07,
	0x53, 0x65, 0x6e, 0x64, 0x4f, 0x74, 0x70, 0x12, 0x1d, 0x2e, 0x65, 0x6b, 0x69, 0x70, 0x6d, 0x61,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4f, 0x74,
	0x70, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x18, 0x2e, 0x65, 0x6b, 0x69, 0x70, 0x6d, 0x61, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x12, 0x4e, 0x0a, 0x09, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x4f, 0x74, 0x70, 0x12, 0x1f, 0x2e,
	0x65, 0x6b, 0x69, 0x70, 0x6d, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x4f, 0x74, 0x70, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x20,
	0x2e, 0x65, 0x6b, 0x69, 0x70, 0x6d, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x4f, 0x74, 0x70, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x12, 0x4b, 0x0a, 0x0c, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72,
	0x12, 0x1e, 0x2e, 0x65, 0x6b, 0x69, 0x70, 0x6d, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x1a, 0x1b, 0x2e, 0x65, 0x6b, 0x69, 0x70, 0x6d, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x45, 0x0a,
	0x09, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1b, 0x2e, 0x65, 0x6b, 0x69,
	0x70, 0x6d, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x1b, 0x2e, 0x65, 0x6b, 0x69, 0x70, 0x6d, 0x61,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x4f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x12, 0x3a, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x15, 0x2e, 0x65, 0x6b, 0x69, 0x70, 0x6d, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x1a, 0x15, 0x2e, 0x65, 0x6b, 0x69, 0x70,
	0x6d, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x12, 0x44, 0x0a, 0x0a, 0x41, 0x64, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x12, 0x1d,
	0x2e, 0x65, 0x6b, 0x69, 0x70, 0x6d, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x73, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x1a, 0x15, 0x2e,
	0x65, 0x6b, 0x69, 0x70, 0x6d, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x28, 0x01, 0x12, 0x46, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x73, 0x12, 0x18, 0x2e, 0x65, 0x6b, 0x69, 0x70, 0x6d, 0x61, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1e,
	0x2e, 0x65, 0x6b, 0x69, 0x70, 0x6d, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x41,
	0x0a, 0x0c, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x12, 0x1a,
	0x2e, 0x65, 0x6b, 0x69, 0x70, 0x6d, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x49, 0x64, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x15, 0x2e, 0x65, 0x6b, 0x69,
	0x70, 0x6d, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x12, 0x46, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x73, 0x12,
	0x18, 0x2e, 0x65, 0x6b, 0x69, 0x70, 0x6d, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1e, 0x2e, 0x65, 0x6b, 0x69, 0x70,
	0x6d, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x57, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x3e, 0x0a, 0x0c, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x12, 0x17, 0x2e, 0x65, 0x6b, 0x69, 0x70,
	0x6d, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x57, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x1a, 0x15, 0x2e, 0x65, 0x6b, 0x69, 0x70, 0x6d, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x12, 0x60, 0x0a, 0x0f, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x12, 0x25, 0x2e, 0x65,
	0x6b, 0x69, 0x70, 0x6d, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x1a, 0x26, 0x2e, 0x65, 0x6b, 0x69, 0x70, 0x6d, 0x61, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x75, 0x72,
	0x63, 0x68, 0x61, 0x73, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x4d, 0x0a, 0x0e, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x79, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x12, 0x24, 0x2e,
	0x65, 0x6b, 0x69, 0x70, 0x6d, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x1a, 0x15, 0x2e, 0x65, 0x6b, 0x69, 0x70, 0x6d, 0x61, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x12, 0x3f, 0x0a, 0x0b, 0x55, 0x70,
	0x67, 0x72, 0x61, 0x64, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x19, 0x2e, 0x65, 0x6b, 0x69, 0x70,
	0x6d, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x50, 0x6c, 0x61, 0x6e, 0x1a, 0x15, 0x2e, 0x65, 0x6b, 0x69, 0x70, 0x6d, 0x61, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x12, 0x41, 0x0a, 0x08, 0x42,
	0x75, 0x79, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x1e, 0x2e, 0x65, 0x6b, 0x69, 0x70, 0x6d, 0x61,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x42, 0x75, 0x79, 0x41, 0x73, 0x73,
	0x65, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x15, 0x2e, 0x65, 0x6b, 0x69, 0x70, 0x6d, 0x61,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x12, 0x43,
	0x0a, 0x09, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1f, 0x2e, 0x65, 0x6b,
	0x69, 0x70, 0x6d, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x53, 0x65,
	0x6e, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x15, 0x2e, 0x65,
	0x6b, 0x69, 0x70, 0x6d, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x42, 0x09, 0x5a, 0x07, 0x2e, 0x2f, 0x67, 0x6f, 0x3b, 0x70, 0x62, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_user_proto_rawDescOnce sync.Once
	file_proto_user_proto_rawDescData = file_proto_user_proto_rawDesc
)

func file_proto_user_proto_rawDescGZIP() []byte {
	file_proto_user_proto_rawDescOnce.Do(func() {
		file_proto_user_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_user_proto_rawDescData)
	})
	return file_proto_user_proto_rawDescData
}

var file_proto_user_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_proto_user_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_proto_user_proto_goTypes = []interface{}{
	(UserRole)(0),                 // 0: ekipma.api.user.UserRole
	(OtpOpr)(0),                   // 1: ekipma.api.user.OtpOpr
	(WalletType)(0),               // 2: ekipma.api.user.WalletType
	(UserPlanType)(0),             // 3: ekipma.api.user.UserPlanType
	(*User)(nil),                  // 4: ekipma.api.user.User
	(*SendOtpInput)(nil),          // 5: ekipma.api.user.SendOtpInput
	(*VerifyOtpInput)(nil),        // 6: ekipma.api.user.VerifyOtpInput
	(*VerifyOtpOutput)(nil),       // 7: ekipma.api.user.VerifyOtpOutput
	(*RegisterInput)(nil),         // 8: ekipma.api.user.RegisterInput
	(*LoginInput)(nil),            // 9: ekipma.api.user.LoginInput
	(*AuthOutput)(nil),            // 10: ekipma.api.user.AuthOutput
	(*Friend)(nil),                // 11: ekipma.api.user.Friend
	(*MobilesChunk)(nil),          // 12: ekipma.api.user.MobilesChunk
	(*FriendsOutput)(nil),         // 13: ekipma.api.user.FriendsOutput
	(*Wallet)(nil),                // 14: ekipma.api.user.Wallet
	(*WalletsOutput)(nil),         // 15: ekipma.api.user.WalletsOutput
	(*RequestPurchaseInput)(nil),  // 16: ekipma.api.user.RequestPurchaseInput
	(*RequestPurchaseOutput)(nil), // 17: ekipma.api.user.RequestPurchaseOutput
	(*VerifyPurchaseInput)(nil),   // 18: ekipma.api.user.VerifyPurchaseInput
	(*UserPlan)(nil),              // 19: ekipma.api.user.UserPlan
	(*BuyAssetInput)(nil),         // 20: ekipma.api.user.BuyAssetInput
	(*SendTokenInput)(nil),        // 21: ekipma.api.user.SendTokenInput
	(*timestamppb.Timestamp)(nil), // 22: google.protobuf.Timestamp
	(*Chunk)(nil),                 // 23: ekipma.api.common.Chunk
	(*Empty)(nil),                 // 24: ekipma.api.common.Empty
	(*IdInput)(nil),               // 25: ekipma.api.common.IdInput
}
var file_proto_user_proto_depIdxs = []int32{
	22, // 0: ekipma.api.user.User.createdAt:type_name -> google.protobuf.Timestamp
	22, // 1: ekipma.api.user.User.updatedAt:type_name -> google.protobuf.Timestamp
	0,  // 2: ekipma.api.user.User.role:type_name -> ekipma.api.user.UserRole
	19, // 3: ekipma.api.user.User.plan:type_name -> ekipma.api.user.UserPlan
	1,  // 4: ekipma.api.user.SendOtpInput.opr:type_name -> ekipma.api.user.OtpOpr
	4,  // 5: ekipma.api.user.AuthOutput.user:type_name -> ekipma.api.user.User
	19, // 6: ekipma.api.user.Friend.plan:type_name -> ekipma.api.user.UserPlan
	23, // 7: ekipma.api.user.MobilesChunk.info:type_name -> ekipma.api.common.Chunk
	11, // 8: ekipma.api.user.FriendsOutput.friends:type_name -> ekipma.api.user.Friend
	2,  // 9: ekipma.api.user.Wallet.type:type_name -> ekipma.api.user.WalletType
	14, // 10: ekipma.api.user.WalletsOutput.wallets:type_name -> ekipma.api.user.Wallet
	14, // 11: ekipma.api.user.RequestPurchaseOutput.wDist:type_name -> ekipma.api.user.Wallet
	2,  // 12: ekipma.api.user.VerifyPurchaseInput.type:type_name -> ekipma.api.user.WalletType
	3,  // 13: ekipma.api.user.UserPlan.type:type_name -> ekipma.api.user.UserPlanType
	22, // 14: ekipma.api.user.UserPlan.expiresAt:type_name -> google.protobuf.Timestamp
	5,  // 15: ekipma.api.user.UserService.SendOtp:input_type -> ekipma.api.user.SendOtpInput
	6,  // 16: ekipma.api.user.UserService.VerifyOtp:input_type -> ekipma.api.user.VerifyOtpInput
	8,  // 17: ekipma.api.user.UserService.RegisterUser:input_type -> ekipma.api.user.RegisterInput
	9,  // 18: ekipma.api.user.UserService.LoginUser:input_type -> ekipma.api.user.LoginInput
	4,  // 19: ekipma.api.user.UserService.UpdateUser:input_type -> ekipma.api.user.User
	12, // 20: ekipma.api.user.UserService.AddFriends:input_type -> ekipma.api.user.MobilesChunk
	24, // 21: ekipma.api.user.UserService.GetFriends:input_type -> ekipma.api.common.Empty
	25, // 22: ekipma.api.user.UserService.RemoveFriend:input_type -> ekipma.api.common.IdInput
	24, // 23: ekipma.api.user.UserService.GetWallets:input_type -> ekipma.api.common.Empty
	14, // 24: ekipma.api.user.UserService.UpdateWallet:input_type -> ekipma.api.user.Wallet
	16, // 25: ekipma.api.user.UserService.RequestPurchase:input_type -> ekipma.api.user.RequestPurchaseInput
	18, // 26: ekipma.api.user.UserService.VerifyPurchase:input_type -> ekipma.api.user.VerifyPurchaseInput
	19, // 27: ekipma.api.user.UserService.UpgradePlan:input_type -> ekipma.api.user.UserPlan
	20, // 28: ekipma.api.user.UserService.BuyAsset:input_type -> ekipma.api.user.BuyAssetInput
	21, // 29: ekipma.api.user.UserService.SendToken:input_type -> ekipma.api.user.SendTokenInput
	24, // 30: ekipma.api.user.UserService.SendOtp:output_type -> ekipma.api.common.Empty
	7,  // 31: ekipma.api.user.UserService.VerifyOtp:output_type -> ekipma.api.user.VerifyOtpOutput
	10, // 32: ekipma.api.user.UserService.RegisterUser:output_type -> ekipma.api.user.AuthOutput
	10, // 33: ekipma.api.user.UserService.LoginUser:output_type -> ekipma.api.user.AuthOutput
	4,  // 34: ekipma.api.user.UserService.UpdateUser:output_type -> ekipma.api.user.User
	4,  // 35: ekipma.api.user.UserService.AddFriends:output_type -> ekipma.api.user.User
	13, // 36: ekipma.api.user.UserService.GetFriends:output_type -> ekipma.api.user.FriendsOutput
	4,  // 37: ekipma.api.user.UserService.RemoveFriend:output_type -> ekipma.api.user.User
	15, // 38: ekipma.api.user.UserService.GetWallets:output_type -> ekipma.api.user.WalletsOutput
	4,  // 39: ekipma.api.user.UserService.UpdateWallet:output_type -> ekipma.api.user.User
	17, // 40: ekipma.api.user.UserService.RequestPurchase:output_type -> ekipma.api.user.RequestPurchaseOutput
	4,  // 41: ekipma.api.user.UserService.VerifyPurchase:output_type -> ekipma.api.user.User
	4,  // 42: ekipma.api.user.UserService.UpgradePlan:output_type -> ekipma.api.user.User
	4,  // 43: ekipma.api.user.UserService.BuyAsset:output_type -> ekipma.api.user.User
	4,  // 44: ekipma.api.user.UserService.SendToken:output_type -> ekipma.api.user.User
	30, // [30:45] is the sub-list for method output_type
	15, // [15:30] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_proto_user_proto_init() }
func file_proto_user_proto_init() {
	if File_proto_user_proto != nil {
		return
	}
	file_proto_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_proto_user_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendOtpInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyOtpInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyOtpOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Friend); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MobilesChunk); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FriendsOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Wallet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WalletsOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestPurchaseInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestPurchaseOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyPurchaseInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserPlan); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuyAssetInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendTokenInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_user_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_user_proto_goTypes,
		DependencyIndexes: file_proto_user_proto_depIdxs,
		EnumInfos:         file_proto_user_proto_enumTypes,
		MessageInfos:      file_proto_user_proto_msgTypes,
	}.Build()
	File_proto_user_proto = out.File
	file_proto_user_proto_rawDesc = nil
	file_proto_user_proto_goTypes = nil
	file_proto_user_proto_depIdxs = nil
}
