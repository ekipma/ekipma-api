syntax = "proto3";
package ekipma.api.pay;

import "protos/common.proto";
import "google/protobuf/timestamp.proto";

option go_package = "./go;pb";

enum PayType {
  Unkown = 0;
  New = 1;
  Repay = 2;
}

enum PayUnit {
  Unknown = 0;
  USD = 1;
  IRTT = 2;
  EUR = 3;
  POND = 4;
}

message Pay {
  ekipma.api.common.Chunk chunk = 1;
  // gorm
  uint64 id = 2;
  google.protobuf.Timestamp createdAt = 3;
  google.protobuf.Timestamp updatedAt = 4;
  // rec
  string title = 5;
  string desc = 6;
  uint64 author = 7;
  uint64 assignee = 8;
  repeated uint64 assignees = 9;
  uint64 group = 10;
  bool private = 11;
  // pay
  double total = 13;
  PayUnit unit = 14;
  PayType type = 15;
  bool rejected = 16;
}

service PayService {
  rpc CreatePays(PayInput) returns (stream Pay) {}
  rpc RecentPays(ekipma.api.common.Last) returns (stream Pay) {}
  rpc DeletePay(ekipma.api.common.Last) returns (ekipma.api.common.Empty) {}
  // integrity - probably a button in mobile client settings
  rpc PayIds(ekipma.api.common.Empty) returns (ekipma.api.common.Integrity) {}
  rpc LostPays(ekipma.api.common.Integrity) returns (stream Pay) {}
}

message PayInput {
  string title = 1;
  string desc = 2;
  uint64 author = 3;
  repeated uint64 assignees = 4;
  uint64 group = 5;
  bool private = 6;
  // pay
  double total = 7;
  PayUnit unit = 8;
  PayType type = 9;
}
