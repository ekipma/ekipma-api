syntax = "proto3";
package ekipma.api.user;

import "protos/common.proto";
import "google/protobuf/timestamp.proto";

option go_package = "./go;pb";

enum UserRole {
  Unkown = 0;
  Normal = 1;
  Opr = 2;
  Admin = 3;
}

enum WalletType {
  BTC = 0;
  XNO = 1;
  TRX = 2;
}

message User {
  ekipma.api.common.Chunk chunk = 1;
  // gorm
  uint64 id = 2;
  google.protobuf.Timestamp createdAt = 3;
  google.protobuf.Timestamp updatedAt = 4;
  // user
  string mobile = 5;
  string code = 6;
  string name = 7;
  string email = 8;
  string photoURL = 9;
  bool public = 10;
  repeated uint64 friends = 11;
  uint64 inviter = 12;
  UserRole role = 13;
  google.protobuf.Timestamp premiumTill = 14;
  string wAddr = 15;
  WalletType wType = 16;
}

message Friend {
  ekipma.api.common.Chunk chunk = 1;
  uint64 id = 2;
  string name = 3;
  string email = 4;
  string photoURL = 5;
  google.protobuf.Timestamp premiumTill = 6;
}

service UserService {
  // otp
  rpc SendOtp(OtpMobileInput) returns (ekipma.api.common.Empty) {}
  rpc CheckOtp(OtpCodeInput) returns (OtpOutput) {}
  // auth
  rpc RegisterUser(RegisterInput) returns (AuthOutput) {}
  rpc LoginUser(LoginInput) returns (AuthOutput) {}
  // friend
  rpc AddFriends(stream FriendInput) returns (stream Friend) {}
  rpc GetFriends(ekipma.api.common.Empty) returns (stream Friend) {}
  rpc RemoveFriend(ekipma.api.common.IdInput)
      returns (ekipma.api.common.Empty) {}
  // NOTICE no methods for integrity - it can be checked client-side
  // premium
  rpc CheckAndSetWallet(WalletInput) returns (WalletOutput) {
  } // updates user's wallets and sends my wallet to them
  rpc CheckPremium(ekipma.api.common.Empty) returns (User) {}
}

// otp
message OtpMobileInput {
  string mobile = 1; // used for sms
  bool register = 2; // if it is for register
}

message OtpCodeInput {
  string mobile = 1;
  string code = 2; // validation
}

message OtpOutput {
  string otpToken = 1; // salts mobile
}

// auth
message RegisterInput {
  string otpToken = 1; // has mobile
  string password = 2;
  string name = 3;
  uint64 inviter = 4;
  string email = 5;
}

message LoginInput {
  string mobile = 1;
  string password = 2;
}

message AuthOutput {
  string token = 1;
  User user = 2;
}

// friend
message FriendInput {
  ekipma.api.common.Chunk chunk = 1;
  string mobile = 2;
}

// premium
message WalletInput {
  string wAddr = 1;
  WalletType wType = 2;
}

message WalletOutput {
  User user = 1;    // updated user with his new wallet
  string wAddr = 2; // send my related wallet address
}
