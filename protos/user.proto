syntax = "proto3";
package ekipma.api.user;

import "protos/common.proto";
import "google/protobuf/timestamp.proto";

option go_package = "./go;pb";

enum UserRole {
  Unkown = 0;
  Normal = 1;
  Opr = 2;
  Admin = 3;
}

message User {
  // gorm
  uint64 id = 1;
  google.protobuf.Timestamp createdAt = 2;
  google.protobuf.Timestamp updatedAt = 3;
  // user
  string mobile = 4;
  string code = 5;
  string name = 6;
  string email = 7;
  string photoURL = 8;
  bool public = 9;
  repeated uint64 friends = 10;
  uint64 inviter = 11;
  UserRole role = 12;
}

service UserService {
  // otp
  rpc SendOtp(OtpMobileInput) returns (ekipma.api.common.Empty) {}
  rpc CheckOtp(OtpCodeInput) returns (OtpOutput) {}
  // auth
  rpc RegisterUser(RegisterInput) returns (UserOutput) {}
  rpc LoginUser(LoginInput) returns (UserOutput) {}
  // friend
  rpc AddFriends(stream FriendInput) returns (stream FriendOutput) {}
  rpc GetFriends(ekipma.api.common.Empty) returns (stream FriendOutput) {}
  rpc RemoveFriend(ekipma.api.common.IdInput)
      returns (ekipma.api.common.Empty) {}
}

// otp
message OtpMobileInput {
  string mobile = 1;   // used for sms
  bool isRegister = 2; // if it is for register
}

message OtpCodeInput {
  string mobile = 1;
  string code = 2; // validation
}

message OtpOutput {
  string otpToken = 1; // salts mobile
}

// auth
message RegisterInput {
  string otpToken = 1; // has mobile
  string password = 2;
  string name = 3;
  uint64 inviter = 4;
  string email = 5;
}

message LoginInput {
  string mobile = 1;
  string password = 2;
}

message UserOutput {
  string token = 1;
  User user = 2;
}

// friend
message FriendInput {
  string mobile = 1; //
}

message FriendOutput {
  uint64 id = 1;
  string name = 6;
  string email = 7;
  string photoURL = 8;
}
